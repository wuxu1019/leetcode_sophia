# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def isSubtree(self, s, t):
        if not s and not t:
            return True
        if not s or not t:
            return False
        if s.val == t.val:
            if self.isSubtreeHelper(s, t):
                return True
        if self.isSubtree(s.left, t):
            return True
        if self.isSubtree(s.right, t):
            return True
        
        return False
    
    def isSubtreeHelper(self, s, t):
        if not s and not t:
            return True
        if not s or not t:
            return False
        if self.isSubtreeHelper(s.left, t.left) and \
            self.isSubtreeHelper(s.right, t.right) and \
            s.val == t.val:
            return True
        return False
        
        
        """
        :type s: TreeNode
        :type t: TreeNode
        :rtype: bool
        """
        
