'''
You need to find the largest value in each row of a binary tree.

Example:
Input: 

          1
         / \
        3   2
       / \   \  
      5   3   9 

Output: [1, 3, 9]

'''

# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def largestValues(self, root):
        self.mval = []
        self.largestValuesHelper(root, 0)
        return self.mval
    
    def largestValuesHelper(self, root, degree):
        if not root:
            return
        if len(self.mval) > degree:
            self.mval[degree] = max(self.mval[degree], root.val)
        else:
            self.mval.append(root.val)
        
        self.largestValuesHelper(root.left, degree+1)
        self.largestValuesHelper(root.right, degree+1)
        """
        :type root: TreeNode
        :rtype: List[int]
        """
        
