class Solution(object):
    def pathSum(self, root, sum):
        if not root:
            return 0
        self.result = 0
        self.pathSumHelper(root, sum, 0, {0:1})
        return self.result
        
    def pathSumHelper(self, root, target, sofar, cache):
        if not root:
            return 0
        comp = root.val+sofar-target
        if comp in cache:
            self.result += cache[comp]
        cache.setdefault(root.val+sofar, 0)
        cache[root.val+sofar] += 1
        self.pathSumHelper(root.left, target, root.val+sofar, cache)
        self.pathSumHelper(root.right, target, root.val+sofar, cache)
        cache[root.val+sofar] -= 1
        
        
        """
        :type root: TreeNode
        :type sum: int
        :rtype: int
        """
