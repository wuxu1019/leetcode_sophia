class Solution(object):
    def countPrimes(self, n):
        if n <= 2:
            return 0
        mark = [True] * n
        mark[0], mark[1] = False, False
        for i in xrange(2, n):
            if mark[i]:
                mark[i*2:n:i] = [False]*len(mark[i*2:n:i])
        return sum(mark)
        """
        :type n: int
        :rtype: int
        """
class Solution(object):
    def countPrimes(self, n):
        if n < 3:
            return 0
        primes = [True] * n
        primes[0] = primes[1] = False
        for i in range(2, int(n ** 0.5) + 1):
            if primes[i]:
                primes[i * i: n: i] = [False] * len(primes[i * i: n: i])
        return sum(primes)
        """
        :type n: int
        :rtype: int
        """        
