'''
Given two non-empty binary trees s and t, check whether tree t has exactly the same structure and node values with a subtree of s. A subtree of s is a tree consists of a node in s and all of this node's descendants. The tree s could also be considered as a subtree of itself.

'''


class Solution(object):
    def isSubtree(self, s, t):
        if not s and not t:
            return True
        if None in [s, t]:
            return False
        if s.val == t.val and self.isSame(s, t):
            return True
        return self.isSubtree(s.left, t) or self.isSubtree(s.right, t)
    
    def isSame(self, s, t):
        if not s and not t:
            return True
        if None in [s, t]:
            return False
        return s.val == t.val and self.isSame(s.left, t.left) and self.isSame(s.right, t.right)
       
